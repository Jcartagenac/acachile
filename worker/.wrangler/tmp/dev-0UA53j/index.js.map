{
  "version": 3,
  "sources": ["../bundle-VR3wqL/strip-cf-connecting-ip-header.js", "../../../src/index.ts", "../../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-VR3wqL/middleware-insertion-facade.js", "../../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-VR3wqL/middleware-loader.entry.ts"],
  "sourceRoot": "/Users/jcartagenac/Documents/poroto/worker/.wrangler/tmp/dev-0UA53j",
  "sourcesContent": ["function stripCfConnectingIPHeader(input, init) {\n\tconst request = new Request(input, init);\n\trequest.headers.delete(\"CF-Connecting-IP\");\n\treturn request;\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\treturn Reflect.apply(target, thisArg, [\n\t\t\tstripCfConnectingIPHeader.apply(null, argArray),\n\t\t]);\n\t},\n});\n", "/**\n * ACA Chile Cloudflare Worker\n * API Backend para la Asociaci\u00F3n Chilena de Asadores\n */\n\nexport interface Env {\n  ACA_KV: KVNamespace;\n  ENVIRONMENT: string;\n  JWT_SECRET?: string;\n  ADMIN_EMAIL?: string;\n  CORS_ORIGIN?: string;\n}\n\n// CORS headers para permitir requests del frontend\nconst corsHeaders = {\n  'Access-Control-Allow-Origin': '*',\n  'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n  'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n};\n\nexport default {\n  async fetch(request: Request, env: Env, ctx: ExecutionContext): Promise<Response> {\n    // Manejar preflight CORS requests\n    if (request.method === 'OPTIONS') {\n      return new Response(null, {\n        headers: corsHeaders,\n      });\n    }\n\n    const url = new URL(request.url);\n    \n    try {\n      // Router b\u00E1sico\n      switch (url.pathname) {\n        case '/':\n          return handleHome();\n        \n        case '/api/health':\n          return handleHealth();\n        \n        case '/api/eventos':\n          return handleEventos(request, env);\n        \n        case '/api/noticias':\n          return handleNoticias(request, env);\n        \n        case '/api/auth/login':\n          return handleLogin(request, env);\n        \n        case '/api/auth/register':\n          return handleRegister(request, env);\n        \n        case '/api/auth/profile':\n          return handleProfile(request, env);\n        \n        default:\n          // Handle dynamic routes\n          if (url.pathname.startsWith('/api/eventos/')) {\n            return handleEventosById(request, env);\n          }\n          \n          return new Response('Not Found', { \n            status: 404,\n            headers: corsHeaders \n          });\n      }\n    } catch (error) {\n      console.error('Worker error:', error);\n      return new Response('Internal Server Error', { \n        status: 500,\n        headers: corsHeaders \n      });\n    }\n  },\n};\n\n// Handlers\nfunction handleHome(): Response {\n  return new Response(JSON.stringify({\n    message: 'ACA Chile Worker API',\n    version: '1.0.0',\n    endpoints: [\n      '/api/health',\n      '/api/eventos',\n      '/api/noticias'\n    ]\n  }), {\n    headers: {\n      'Content-Type': 'application/json',\n      ...corsHeaders,\n    },\n  });\n}\n\nfunction handleHealth(): Response {\n  return new Response(JSON.stringify({\n    status: 'ok',\n    timestamp: new Date().toISOString(),\n    service: 'ACA Chile Worker'\n  }), {\n    headers: {\n      'Content-Type': 'application/json',\n      ...corsHeaders,\n    },\n  });\n}\n\nasync function handleEventos(request: Request, env: Env): Promise<Response> {\n  const url = new URL(request.url);\n  const method = request.method;\n\n  // GET /api/eventos - Listar eventos con filtros\n  if (method === 'GET') {\n    const type = url.searchParams.get('type');\n    const status = url.searchParams.get('status') || 'published';\n    const search = url.searchParams.get('search');\n    const page = parseInt(url.searchParams.get('page') || '1');\n    const limit = parseInt(url.searchParams.get('limit') || '12');\n\n    // Datos de ejemplo m\u00E1s completos\n    let eventos = [\n      {\n        id: 1,\n        title: 'Campeonato Nacional de Asadores 2025',\n        date: '2025-11-15',\n        time: '09:00',\n        location: 'Parque O\\'Higgins, Santiago',\n        description: 'El evento m\u00E1s importante del a\u00F1o para asadores chilenos. Competencia por categor\u00EDas con premiaci\u00F3n especial y degustaci\u00F3n para el p\u00FAblico.',\n        image: 'https://acachile.com/wp-content/uploads/2025/03/64694334-bbdc-4e97-b4a7-ef75e6bbe50d-500x375.jpg',\n        type: 'campeonato' as const,\n        registrationOpen: true,\n        maxParticipants: 50,\n        currentParticipants: 32,\n        price: 15000,\n        organizerId: 1,\n        createdAt: '2024-10-01T10:00:00Z',\n        updatedAt: '2024-10-14T15:30:00Z',\n        status: 'published' as const,\n        requirements: ['Parrilla propia', 'Implementos de cocina', 'Delantal'],\n        tags: ['campeonato', 'nacional', 'asadores'],\n        contactInfo: {\n          email: 'campeonato@acachile.com',\n          phone: '+56912345678'\n        }\n      },\n      {\n        id: 2,\n        title: 'Taller: T\u00E9cnicas de Ahumado',\n        date: '2025-10-25',\n        time: '14:00',\n        location: 'Escuela Culinaria ACA, Las Condes',\n        description: 'Aprende las mejores t\u00E9cnicas de ahumado con el chef internacional Pablo Ib\u00E1\u00F1ez. Incluye degustaci\u00F3n y certificado.',\n        image: 'https://acachile.com/wp-content/uploads/2025/06/post-_2025-12-500x375.png',\n        type: 'taller' as const,\n        registrationOpen: true,\n        maxParticipants: 20,\n        currentParticipants: 8,\n        price: 45000,\n        organizerId: 1,\n        createdAt: '2024-09-15T09:00:00Z',\n        updatedAt: '2024-10-10T11:20:00Z',\n        status: 'published' as const,\n        requirements: ['Sin experiencia previa necesaria'],\n        tags: ['taller', 'ahumado', 't\u00E9cnicas'],\n        contactInfo: {\n          email: 'talleres@acachile.com',\n          phone: '+56987654321'\n        }\n      },\n      {\n        id: 3,\n        title: 'Encuentro Regional Valpara\u00EDso',\n        date: '2025-12-08',\n        time: '11:00',\n        location: 'Vi\u00F1a del Mar, Quinta Regi\u00F3n',\n        description: 'Encuentro gastron\u00F3mico regional con asadores de la V Regi\u00F3n. Actividades familiares y competencias amistosas.',\n        image: 'https://acachile.com/wp-content/uploads/2024/08/post-alemania-500x375.jpg',\n        type: 'encuentro' as const,\n        registrationOpen: true,\n        maxParticipants: undefined,\n        currentParticipants: 15,\n        price: 0,\n        organizerId: 2,\n        createdAt: '2024-10-05T16:00:00Z',\n        updatedAt: '2024-10-12T09:45:00Z',\n        status: 'published' as const,\n        requirements: ['Solo ganas de compartir'],\n        tags: ['encuentro', 'regional', 'familia'],\n        contactInfo: {\n          email: 'valparaiso@acachile.com'\n        }\n      },\n      {\n        id: 4,\n        title: 'Torneo de Costillares',\n        date: '2025-11-30',\n        time: '10:00',\n        location: 'Club de Campo Los Leones',\n        description: 'Torneo especializado en preparaci\u00F3n de costillares. Modalidad equipos de 3 personas.',\n        image: 'https://acachile.com/wp-content/uploads/2024/08/1697587321850-500x375.jpg',\n        type: 'torneo' as const,\n        registrationOpen: false,\n        maxParticipants: 30,\n        currentParticipants: 30,\n        price: 25000,\n        organizerId: 1,\n        createdAt: '2024-09-20T12:00:00Z',\n        updatedAt: '2024-10-01T14:15:00Z',\n        status: 'published' as const,\n        requirements: ['Equipo de 3 personas', 'Costillar por equipo'],\n        tags: ['torneo', 'costillares', 'equipos'],\n        contactInfo: {\n          email: 'torneos@acachile.com',\n          website: 'https://torneos.acachile.com'\n        }\n      }\n    ];\n\n    // Aplicar filtros\n    if (type) {\n      eventos = eventos.filter(evento => evento.type === type);\n    }\n\n    if (status) {\n      eventos = eventos.filter(evento => evento.status === status);\n    }\n\n    if (search) {\n      const searchLower = search.toLowerCase();\n      eventos = eventos.filter(evento => \n        evento.title.toLowerCase().includes(searchLower) ||\n        evento.description.toLowerCase().includes(searchLower) ||\n        evento.location.toLowerCase().includes(searchLower)\n      );\n    }\n\n    // Paginaci\u00F3n\n    const total = eventos.length;\n    const pages = Math.ceil(total / limit);\n    const startIndex = (page - 1) * limit;\n    const endIndex = startIndex + limit;\n    const paginatedEventos = eventos.slice(startIndex, endIndex);\n\n    return new Response(JSON.stringify({\n      success: true,\n      data: paginatedEventos,\n      pagination: {\n        page,\n        limit,\n        total,\n        pages\n      }\n    }), {\n      headers: {\n        'Content-Type': 'application/json',\n        ...corsHeaders,\n      },\n    });\n  }\n\n  // POST /api/eventos - Crear nuevo evento\n  if (method === 'POST') {\n    try {\n      const body = await request.json() as any;\n      \n      // Simular creaci\u00F3n de evento\n      const nuevoEvento = {\n        id: Date.now(),\n        ...body,\n        currentParticipants: 0,\n        organizerId: 1, // TODO: Obtener del token\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString(),\n        status: 'published' as const\n      };\n\n      return new Response(JSON.stringify({\n        success: true,\n        data: nuevoEvento,\n        message: 'Evento creado exitosamente'\n      }), {\n        headers: {\n          'Content-Type': 'application/json',\n          ...corsHeaders,\n        },\n      });\n    } catch (error) {\n      return new Response(JSON.stringify({\n        success: false,\n        error: 'Error al crear evento'\n      }), {\n        status: 400,\n        headers: {\n          'Content-Type': 'application/json',\n          ...corsHeaders,\n        },\n      });\n    }\n  }\n\n  return new Response('Method not allowed', {\n    status: 405,\n    headers: corsHeaders,\n  });\n}\n\nasync function handleNoticias(request: Request, env: Env): Promise<Response> {\n  // Ejemplo de datos de noticias\n  const noticias = [\n    {\n      id: 1,\n      title: 'Chile Brilla en Campeonato Internacional',\n      date: '2024-09-15',\n      excerpt: 'Equipo QUINTA PARRILLA logra tercer lugar en competencia internacional.',\n      image: 'https://acachile.com/wp-content/uploads/2024/08/1697587321850-500x375.jpg'\n    },\n    {\n      id: 2,\n      title: 'ACA en el Mundial de Alemania',\n      date: '2024-07-28',\n      excerpt: 'Tres equipos chilenos compitieron en Stuttgart contra 106 equipos.',\n      image: 'https://acachile.com/wp-content/uploads/2024/08/post-alemania-500x375.jpg'\n    }\n  ];\n\n  return new Response(JSON.stringify(noticias), {\n    headers: {\n      'Content-Type': 'application/json',\n      ...corsHeaders,\n    },\n  });\n}\n\n// Funciones de autenticaci\u00F3n\nasync function handleLogin(request: Request, env: Env): Promise<Response> {\n  if (request.method !== 'POST') {\n    return new Response('Method not allowed', {\n      status: 405,\n      headers: corsHeaders,\n    });\n  }\n\n  try {\n    const body = await request.json() as { email: string; password: string };\n    const { email, password } = body;\n\n    // Validaci\u00F3n b\u00E1sica\n    if (!email || !password) {\n      return new Response(JSON.stringify({\n        success: false,\n        error: 'Email y contrase\u00F1a son requeridos'\n      }), {\n        status: 400,\n        headers: {\n          'Content-Type': 'application/json',\n          ...corsHeaders,\n        },\n      });\n    }\n\n    // Usuarios de demo (en producci\u00F3n usar base de datos)\n    const demoUsers = [\n      {\n        id: 1,\n        email: 'admin@acachile.com',\n        password: '123456', // En producci\u00F3n usar hash\n        name: 'Administrador ACA',\n        membershipType: 'vip',\n        region: 'Metropolitana',\n        joinDate: '2024-01-01',\n        active: true\n      },\n      {\n        id: 2,\n        email: 'usuario@acachile.com',\n        password: '123456',\n        name: 'Usuario Demo',\n        membershipType: 'basic',\n        region: 'Valpara\u00EDso',\n        joinDate: '2024-06-15',\n        active: true\n      }\n    ];\n\n    const user = demoUsers.find(u => u.email === email && u.password === password);\n    \n    if (!user) {\n      return new Response(JSON.stringify({\n        success: false,\n        error: 'Credenciales inv\u00E1lidas'\n      }), {\n        status: 401,\n        headers: {\n          'Content-Type': 'application/json',\n          ...corsHeaders,\n        },\n      });\n    }\n\n    // Crear token JWT simple (en producci\u00F3n usar librer\u00EDa JWT)\n    const token = btoa(JSON.stringify({\n      userId: user.id,\n      email: user.email,\n      exp: Date.now() + (7 * 24 * 60 * 60 * 1000) // 7 d\u00EDas\n    }));\n\n    // Respuesta sin la contrase\u00F1a\n    const { password: _, ...userResponse } = user;\n\n    return new Response(JSON.stringify({\n      success: true,\n      data: {\n        user: userResponse,\n        token,\n        expiresAt: new Date(Date.now() + (7 * 24 * 60 * 60 * 1000)).toISOString()\n      }\n    }), {\n      headers: {\n        'Content-Type': 'application/json',\n        ...corsHeaders,\n      },\n    });\n\n  } catch (error) {\n    return new Response(JSON.stringify({\n      success: false,\n      error: 'Error interno del servidor'\n    }), {\n      status: 500,\n      headers: {\n        'Content-Type': 'application/json',\n        ...corsHeaders,\n      },\n    });\n  }\n}\n\nasync function handleRegister(request: Request, env: Env): Promise<Response> {\n  if (request.method !== 'POST') {\n    return new Response('Method not allowed', {\n      status: 405,\n      headers: corsHeaders,\n    });\n  }\n\n  try {\n    const body = await request.json() as { \n      email: string; \n      password: string; \n      name: string; \n      phone?: string; \n      region?: string; \n    };\n    const { email, password, name, phone, region } = body;\n\n    // Validaci\u00F3n b\u00E1sica\n    if (!email || !password || !name) {\n      return new Response(JSON.stringify({\n        success: false,\n        error: 'Email, contrase\u00F1a y nombre son requeridos'\n      }), {\n        status: 400,\n        headers: {\n          'Content-Type': 'application/json',\n          ...corsHeaders,\n        },\n      });\n    }\n\n    // Simulaci\u00F3n de registro exitoso\n    const newUser = {\n      id: Date.now(),\n      email,\n      name,\n      phone: phone || null,\n      region: region || null,\n      membershipType: 'basic',\n      joinDate: new Date().toISOString().split('T')[0],\n      active: true\n    };\n\n    // Crear token\n    const token = btoa(JSON.stringify({\n      userId: newUser.id,\n      email: newUser.email,\n      exp: Date.now() + (7 * 24 * 60 * 60 * 1000)\n    }));\n\n    return new Response(JSON.stringify({\n      success: true,\n      data: {\n        user: newUser,\n        token,\n        expiresAt: new Date(Date.now() + (7 * 24 * 60 * 60 * 1000)).toISOString()\n      },\n      message: 'Cuenta creada exitosamente'\n    }), {\n      headers: {\n        'Content-Type': 'application/json',\n        ...corsHeaders,\n      },\n    });\n\n  } catch (error) {\n    return new Response(JSON.stringify({\n      success: false,\n      error: 'Error interno del servidor'\n    }), {\n      status: 500,\n      headers: {\n        'Content-Type': 'application/json',\n        ...corsHeaders,\n      },\n    });\n  }\n}\n\nasync function handleProfile(request: Request, env: Env): Promise<Response> {\n  if (request.method !== 'GET') {\n    return new Response('Method not allowed', {\n      status: 405,\n      headers: corsHeaders,\n    });\n  }\n\n  // TODO: Implementar verificaci\u00F3n de token\n  const authHeader = request.headers.get('Authorization');\n  \n  if (!authHeader || !authHeader.startsWith('Bearer ')) {\n    return new Response(JSON.stringify({\n      success: false,\n      error: 'Token de autorizaci\u00F3n requerido'\n    }), {\n      status: 401,\n      headers: {\n        'Content-Type': 'application/json',\n        ...corsHeaders,\n      },\n    });\n  }\n\n  return new Response(JSON.stringify({\n    success: true,\n    message: 'Perfil de usuario (implementar)'\n  }), {\n    headers: {\n      'Content-Type': 'application/json',\n      ...corsHeaders,\n    },\n  });\n}\n\n// Manejar rutas espec\u00EDficas de eventos (/api/eventos/:id)\nasync function handleEventosById(request: Request, env: Env): Promise<Response> {\n  const url = new URL(request.url);\n  const pathParts = url.pathname.split('/');\n  const eventId = parseInt(pathParts[3]);\n\n  if (isNaN(eventId)) {\n    return new Response(JSON.stringify({\n      success: false,\n      error: 'ID de evento inv\u00E1lido'\n    }), {\n      status: 400,\n      headers: {\n        'Content-Type': 'application/json',\n        ...corsHeaders,\n      },\n    });\n  }\n\n  // GET /api/eventos/:id - Obtener evento espec\u00EDfico\n  if (request.method === 'GET') {\n    // Evento de ejemplo (normalmente desde base de datos)\n    const evento = {\n      id: eventId,\n      title: 'Campeonato Nacional de Asadores 2025',\n      date: '2025-11-15',\n      time: '09:00',\n      location: 'Parque O\\'Higgins, Santiago',\n      description: 'El evento m\u00E1s importante del a\u00F1o para asadores chilenos. Competencia por categor\u00EDas con premiaci\u00F3n especial y degustaci\u00F3n para el p\u00FAblico.\\n\\nEn este campeonato nacional participar\u00E1n los mejores asadores de todas las regiones del pa\u00EDs, compitiendo en diferentes categor\u00EDas como mejor asado, mejor chorizo, y mejor acompa\u00F1amiento.\\n\\nEl evento incluye:\\n- Competencias oficiales por categor\u00EDas\\n- Degustaci\u00F3n abierta al p\u00FAblico\\n- Actividades para toda la familia\\n- Premiaci\u00F3n con trofeos y premios en efectivo\\n- M\u00FAsica en vivo y entretenimiento',\n      image: 'https://acachile.com/wp-content/uploads/2025/03/64694334-bbdc-4e97-b4a7-ef75e6bbe50d-500x375.jpg',\n      type: 'campeonato' as const,\n      registrationOpen: true,\n      maxParticipants: 50,\n      currentParticipants: 32,\n      price: 15000,\n      organizerId: 1,\n      createdAt: '2024-10-01T10:00:00Z',\n      updatedAt: '2024-10-14T15:30:00Z',\n      status: 'published' as const,\n      requirements: [\n        'Parrilla propia (tama\u00F1o m\u00EDnimo 60x40cm)',\n        'Implementos de cocina b\u00E1sicos',\n        'Delantal y gorro de cocinero',\n        'Carne proporcionada por la organizaci\u00F3n'\n      ],\n      tags: ['campeonato', 'nacional', 'asadores', '2025'],\n      contactInfo: {\n        email: 'campeonato@acachile.com',\n        phone: '+56912345678',\n        website: 'https://campeonato.acachile.com'\n      }\n    };\n\n    return new Response(JSON.stringify({\n      success: true,\n      data: evento\n    }), {\n      headers: {\n        'Content-Type': 'application/json',\n        ...corsHeaders,\n      },\n    });\n  }\n\n  // PUT /api/eventos/:id - Actualizar evento\n  if (request.method === 'PUT') {\n    try {\n      const body = await request.json() as any;\n      \n      // TODO: Verificar permisos y actualizar en base de datos\n      const eventoActualizado = {\n        id: eventId,\n        ...body,\n        updatedAt: new Date().toISOString()\n      };\n\n      return new Response(JSON.stringify({\n        success: true,\n        data: eventoActualizado,\n        message: 'Evento actualizado exitosamente'\n      }), {\n        headers: {\n          'Content-Type': 'application/json',\n          ...corsHeaders,\n        },\n      });\n    } catch (error) {\n      return new Response(JSON.stringify({\n        success: false,\n        error: 'Error al actualizar evento'\n      }), {\n        status: 400,\n        headers: {\n          'Content-Type': 'application/json',\n          ...corsHeaders,\n        },\n      });\n    }\n  }\n\n  // DELETE /api/eventos/:id - Eliminar evento\n  if (request.method === 'DELETE') {\n    // TODO: Verificar permisos y eliminar de base de datos\n    \n    return new Response(JSON.stringify({\n      success: true,\n      message: 'Evento eliminado exitosamente'\n    }), {\n      headers: {\n        'Content-Type': 'application/json',\n        ...corsHeaders,\n      },\n    });\n  }\n\n  return new Response('Method not allowed', {\n    status: 405,\n    headers: corsHeaders,\n  });\n}", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/jcartagenac/Documents/poroto/worker/src/index.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/jcartagenac/Documents/poroto/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/jcartagenac/Documents/poroto/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/jcartagenac/Documents/poroto/worker/src/index.ts\";\n\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/jcartagenac/Documents/poroto/worker/.wrangler/tmp/bundle-VR3wqL/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/jcartagenac/Documents/poroto/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/jcartagenac/Documents/poroto/worker/.wrangler/tmp/bundle-VR3wqL/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/jcartagenac/Documents/poroto/worker/.wrangler/tmp/bundle-VR3wqL/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": []
}
